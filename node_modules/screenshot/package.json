{
  "name": "screenshot",
  "version": "0.1.0",
  "description": "Screenshot Module using Snapito API",
  "main": "screenshot.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/Skullbock/screenshot-nodejs.git"
    }
  ],
  "keywords": [
    "screenshot",
    "url",
    "snapito",
    "preview"
  ],
  "author": {
    "name": "Daniele Rosario",
    "email": "daniele@weble.it",
    "url": "http://www.weble.it"
  },
  "license": "GPLv3",
  "dependencies": {
    "request": "2.12.x"
  },
  "readme": "# Screenshot module for NodeJS\n\nThis module lets you easily use the [Snapito](http://snapito.com) APIs in node.js to create screenshots of web pages.\nYou will need an api key that you can fetch here: http://snapito.com/api-doc-paid#apikeygen\n\n## Installation\n\nUsing `npm`:\n\n\tnpm install screenshot\n\nYou can also clone this repository into your `node_modules` directory.\n\n## Examples\n\n### Take a screenshot\n\n```js\nvar snapito = require('screenshot');\nvar screenshot = new snapito('yourapikey');\n\nscreenshot.screenshot('http://www.google.com', 'google.png', {screen: 'desktop'}, function(file){\n\tif (file) {\n\t\tconsole.log('The file ' + file + ' was written correctly');\n\t} else {\n\t\tconsole.log('Error');\n\t}\n});\n```\n\n## Available methods\n\n### screenshot\n\nTake a screenshot\n\nYou can pass a list of options to this method to customize the API\ncall to Snapito. Here is a list of them:\n\n- **screen**:   the screen size: web, mobile, desktop (default: desktop)\n- **type**:     the type of the screenshot: png, jpeg (default: png)\n- **size**:     the size of the screenshot: full (1024x?), lc (1024x768), mc (320x200), sc (80x50) (default: full)\n- **width**:    optional. You can provide a custom width (ie: 900)\n- **height**:   optional. You can provide a custom height (ie: 200)\n- **fast**:     Are you are in a hurry and are willing to sacrifice completeness (like Flash rendering) for speed?. (default: false)\n- **freshness**: How old in seconds the screenshot could be. 0 means indefinetly old (default: 0)\n\n```js\nvar snapito = require('screenshot');\nvar screenshot = new snapito('yourapikey');\n\n// screenshot.screenshot(url, file, options, callback)\nscreenshot.screenshot('http://www.google.com', 'google.png', {screen: 'desktop'}, function(file){\n\tif (file) {\n\t\tconsole.log('The file ' + file + ' was written correctly');\n\t} else {\n\t\tconsole.log('Error');\n\t}\n});\n```",
  "_id": "screenshot@0.1.0",
  "dist": {
    "shasum": "b064a8a568cd3d9958d5853403b7d54bb09bc6f2",
    "tarball": "http://registry.npmjs.org/screenshot/-/screenshot-0.1.0.tgz"
  },
  "_npmVersion": "1.1.63",
  "_npmUser": {
    "name": "skullbock",
    "email": "daniele@weble.it"
  },
  "maintainers": [
    {
      "name": "skullbock",
      "email": "daniele@weble.it"
    }
  ],
  "directories": {},
  "_shasum": "b064a8a568cd3d9958d5853403b7d54bb09bc6f2",
  "_resolved": "https://registry.npmjs.org/screenshot/-/screenshot-0.1.0.tgz",
  "_from": "screenshot@*"
}
